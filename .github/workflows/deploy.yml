name: Deploy - Rocket Uppercut API

on:
  push:
    tags:
      - 'v*.*.*_*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup MySQL
        run:
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
        env:
          DB_DATABASE: test_rocket_uppercut
          DB_USER: root
          DB_PASSWORD: unittest

      - name: Setup MongoDB
        run: docker-compose -f 'mongodb.yml' up -d
        env:
          TEST_MONGO_USER: unittest
          TEST_MONGO_PW: unittest
          TEST_MONGO_DB_NAME: test_rocket_uppercut

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: pytest
        env:
          API_ENV: test
          TEST_MONGO_DB_URL: mongodb://unittest:unittest@localhost:27017/test_rocket_uppercut?authSource=admin
          TEST_DB_URL: mysql://root:unittest@localhost/test_rocket_uppercut?charset=utf8mb4

      - name: Stop MongoDB
        if: always()
        run: docker-compose -f "mongodb.yml" down

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Get Tag
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Container & Push to Docker Hub
        run: |
          docker buildx build --push --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME}}/rocket_uppercut_backend:$IMAGE_TAG .
        env:
          IMAGE_TAG: ${{ env.VERSION }}

      - name: Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            export ROCKET_VERSION=${{ env.VERSION }}
            docker login --username ${{ secrets.DOCKERHUB_USERNAME}} --password ${{ secrets.DOCKERHUB_PASSWORD }}
            cd projects/rocket-uppercut
            sed -E -i'' "s/(.*rocket_uppercut_backend:).*/\1$ROCKET_VERSION/" 'docker-compose.yml'
            source env.sh
            docker-compose pull
            docker-compose up -d
